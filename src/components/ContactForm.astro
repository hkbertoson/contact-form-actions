<div class="mx-auto max-w-2xl text-center">
	<h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
		Contact us
	</h2>
	<p class="mt-2 text-lg leading-8 text-gray-600">
		Have any questions or want to get in touch? Fill out the form below and
		we'll get back to you as soon as possible.
	</p>
</div>
<form class="mx-auto mt-16 max-w-xl sm:mt-20" id="contact-form">
	<div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
		<div>
			<label
				for="first-name"
				class="block text-sm font-semibold leading-6 text-gray-900"
			>
				First name
			</label>
			<div class="mt-2.5">
				<input
					type="text"
					name="firstName"
					id="first-name"
					autocomplete="given-name"
					class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
					required
					oninvalid="this.setCustomValidity('First name is required')"
					oninput="this.setCustomValidity('')"
				/>
			</div>
		</div>
		<div>
			<label
				for="last-name"
				class="block text-sm font-semibold leading-6 text-gray-900"
			>
				Last name
			</label>
			<div class="mt-2.5">
				<input
					type="text"
					name="lastName"
					id="last-name"
					autocomplete="family-name"
					class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
					oninvalid="this.setCustomValidity('Last name is required')"
					oninput="this.setCustomValidity('')"
				/>
			</div>
		</div>
		<div class="sm:col-span-2">
			<label
				for="email"
				class="block text-sm font-semibold leading-6 text-gray-900"
			>
				Email
			</label>
			<div class="mt-2.5">
				<input
					type="email"
					name="email"
					id="email"
					autocomplete="email"
					class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
					required
				/>
			</div>
		</div>
		<div class="sm:col-span-2">
			<label
				for="phone-number"
				class="block text-sm font-semibold leading-6 text-gray-900"
			>
				Phone number
			</label>
			<div class="relative mt-2.5">
				<input
					type="tel"
					name="phoneNumber"
					id="phone-number"
					autocomplete="tel"
					class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
					required
				/>
			</div>
		</div>
		<div>
			<label class="text-base font-semibold text-gray-900"> Locations </label>
			<p class="text-sm text-gray-500">Which location are you interested in?</p>
			<fieldset class="mt-4" data-require-one>
				<legend class="sr-only">Location of interest</legend>
				<div
					class="space-y-4 sm:flex sm:items-center sm:space-x-10 sm:space-y-0"
				>
					<div class="flex items-center">
						<input
							id="first"
							name="location"
							type="radio"
							value="first"
							class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600"
						/>
						<label
							for="first"
							class="ml-3 block text-sm font-medium leading-6 text-gray-900"
						>
							First
						</label>
					</div>
					<div class="flex items-center">
						<input
							id="second"
							name="location"
							type="radio"
							value="second"
							class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600"
						/>
						<label
							for="second"
							class="ml-3 block text-sm font-medium leading-6 text-gray-900"
						>
							Second
						</label>
					</div>
					<div class="flex items-center">
						<input
							id="third"
							name="location"
							type="radio"
							value="third"
							class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600"
						/>
						<label
							for="third"
							class="ml-3 block text-sm font-medium leading-6 text-gray-900"
						>
							Third
						</label>
					</div>
				</div>
			</fieldset>
		</div>
		<div class="sm:col-span-2">
			<label
				for="message"
				class="block text-sm font-semibold leading-6 text-gray-900"
			>
				Message
			</label>
			<div class="mt-2.5">
				<textarea
					name="message"
					id="message"
					rows={4}
					class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
					oninvalid="this.setCustomValidity('Message is required')"
					oninput="this.setCustomValidity('')"
					required></textarea>
			</div>
		</div>
	</div>
	<div class="mt-10">
		<button
			class="block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
		>
			Let's talk
		</button>
	</div>
</form>

<script>
	import {isInputError, actions} from 'astro:actions';
	import confetti from 'canvas-confetti';

	const form = document.getElementById('contact-form') as HTMLFormElement;

	form.addEventListener('submit', async (e) => {
		e.preventDefault();
		const formData = new FormData(form);
		const {data, error} = await actions.contactForm(formData);

		if (data) {
			form.reset();
			confetti({
				particleCount: 100,
				spread: 70,
				origin: {y: 0.6},
			});
		}

		if (error && isInputError(error)) {
			console.error('Input error:', error);
		}
	});

	// Custom validation for radio buttons
	// https://jsbin.com/nucekozegi/1/edit?html,output
	for (const fieldset of document.querySelectorAll(
		'fieldset[data-require-one]'
	)) {
		const updateValidity = () => {
			const elements = Array.from(
				(fieldset as HTMLFieldSetElement).elements
			).filter(
				(element): element is HTMLInputElement =>
					element instanceof HTMLInputElement
			);
			if (elements.some((e) => e.checked)) {
				elements[0].setCustomValidity('');
			} else {
				elements[0].setCustomValidity('At least one required!');
			}
		};
		const form = (fieldset as HTMLFieldSetElement).form;
		if (form) {
			form.addEventListener('change', updateValidity);
		}
		updateValidity();
	}
</script>
